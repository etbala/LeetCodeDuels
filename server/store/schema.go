package store

/*

-- This file is dedicated to the schema of the postgres
-- database that DataStore interacts with.

CREATE TABLE github_oauth_users (
    github_id BIGINT PRIMARY KEY,
    username TEXT NOT NULL,
    lc_username TEXT NOT NULL,
    access_token TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL,
    rating smallint DEFAULT 1000
);

CREATE TABLE problems (
	id INT NOT NULL PRIMARY KEY, -- ID is provided by LeetCode
	name TEXT NOT NULL,
	slug TEXT NOT NULL,
	difficulty TEXT CHECK (difficulty IN ('Easy', 'Medium', 'Hard'))
);

CREATE TABLE tags (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name TEXT NOT NULL
);

CREATE TABLE problem_tags (
	problem_id INT NOT NULL REFERENCES problems(id) ON DELETE CASCADE,
	tag_id INT NOT NULL REFERENCES tags(id) ON DELETE CASCADE,
	PRIMARY KEY (problem_id, tag_id)
);

CREATE TABLE matches (
    id UUID PRIMARY KEY,
    problem_id INT NOT NULL REFERENCES problems(id) ON DELETE SET NULL,
    is_rated BOOLEAN NOT NULL DEFAULT false,
    status TEXT CHECK (status IN ('Won', 'Canceled', 'Reverted')),
    winner_id BIGINT REFERENCES github_oauth_users(github_id) ON DELETE SET NULL,
    start_time TIMESTAMP WITH TIME ZONE NOT NULL,
    end_time TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE match_players (
    match_id UUID NOT NULL REFERENCES matches(id) ON DELETE CASCADE,
    player_id BIGINT NOT NULL REFERENCES github_oauth_users(github_id) ON DELETE CASCADE,
    PRIMARY KEY (match_id, player_id)
);

CREATE TABLE submissions (
    match_id UUID NOT NULL REFERENCES matches(id) ON DELETE CASCADE,
    submission_id INT NOT NULL, -- Submission ID is only unique per match
    player_id BIGINT REFERENCES github_oauth_users(github_id) ON DELETE SET NULL,
    passed_test_cases INT NOT NULL,
    total_test_cases INT NOT NULL,
    status TEXT CHECK (status IN (
        'Accepted', 'Compile Error', 'Memory Limit Exceeded',
        'Runtime Error', 'Time Limit Exceeded', 'Wrong Answer'
    )),
    runtime INT,
    memory INT,
    lang TEXT,
    submitted_at TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY (match_id, submission_id)
);

CREATE INDEX idx_match_players_player_id ON match_players(player_id);
CREATE INDEX idx_submissions_match_id ON submissions(match_id);

*/
